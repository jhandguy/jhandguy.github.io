<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vertical Scaling on jhandguy</title>
    <link>https://jhandguy.github.io/tags/vertical-scaling/</link>
    <description>Recent content in Vertical Scaling on jhandguy</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 08 Nov 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://jhandguy.github.io/tags/vertical-scaling/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vertical Pod Autoscaler in Kubernetes</title>
      <link>https://jhandguy.github.io/posts/vertical-pod-autoscaler/</link>
      <pubDate>Tue, 08 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://jhandguy.github.io/posts/vertical-pod-autoscaler/</guid>
      <description>&lt;p&gt;In Kubernetes, we usually think about the Horizontal Pod Autoscaler (HPA) when referring to autoscaling. In most cases, it will be the preferred way of scaling services, based on CPU usage, memory usage, or custom metrics.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;If you haven&amp;rsquo;t already, go read &lt;a href=&#34;https://jhandguy.github.io/posts/simple-horizontal-autoscaling/&#34;&gt;Horizontal Pod Autoscaler in Kubernetes (Part 1) - Simple Autoscaling using Metrics Server&lt;/a&gt; and learn how to implement a Horizontal Pod Autoscaler using Metrics Server!&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;However, while HPA can scale up and down replicas based on the current load, it is not capable of optimizing resource usage over the long term:  This is where the Vertical Pod Autoscaler (VPA) comes in.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
