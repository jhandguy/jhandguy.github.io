<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design Pattern on jhandguy</title>
    <link>https://jhandguy.github.io/tags/design-pattern/</link>
    <description>Recent content in Design Pattern on jhandguy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 26 Nov 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://jhandguy.github.io/tags/design-pattern/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Lightweight Design Patterns in iOS (Part 4) - Factory</title>
      <link>https://jhandguy.github.io/posts/factory-design-pattern-ios/</link>
      <pubDate>Mon, 26 Nov 2018 00:00:00 +0000</pubDate>
      <guid>https://jhandguy.github.io/posts/factory-design-pattern-ios/</guid>
      <description>Design Patterns are part of Mobile Development for a while now and a revolution towards Quality Assurance is on. Such patterns have become a standard among the community, yet implementing an academic one might come with a price — complexity.
Because some Design Patterns solve very complex problems, they often result in a complicated implementation as well. So complex sometimes, that we tend to use heavy Third Party Frameworks, even for simple use cases.</description>
    </item>
    <item>
      <title>Lightweight Design Patterns in iOS (Part 3) - Coordinator</title>
      <link>https://jhandguy.github.io/posts/coordinator-design-pattern-ios/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      <guid>https://jhandguy.github.io/posts/coordinator-design-pattern-ios/</guid>
      <description>Design Patterns are part of Mobile Development for a while now and a revolution towards Quality Assurance is on. Such patterns have become a standard among the community, yet implementing an academic one might come with a price — complexity.
Because some Design Patterns solve very complex problems, they often result in a complicated implementation as well. So complex sometimes, that we tend to use heavy Third Party Frameworks, even for simple use cases.</description>
    </item>
    <item>
      <title>Lightweight Design Patterns in iOS (Part 2) - Presenter</title>
      <link>https://jhandguy.github.io/posts/presenter-design-pattern-ios/</link>
      <pubDate>Mon, 12 Nov 2018 00:00:00 +0000</pubDate>
      <guid>https://jhandguy.github.io/posts/presenter-design-pattern-ios/</guid>
      <description>Design Patterns are part of Mobile Development for a while now and a revolution towards Quality Assurance is on. Such patterns have become a standard among the community, yet implementing an academic one might come with a price — complexity.
Because some Design Patterns solve very complex problems, they often result in a complicated implementation as well. So complex sometimes, that we tend to use heavy Third Party Frameworks, even for simple use cases.</description>
    </item>
    <item>
      <title>Lightweight Design Patterns in iOS (Part 1) - Observer</title>
      <link>https://jhandguy.github.io/posts/observer-design-pattern-ios/</link>
      <pubDate>Tue, 06 Nov 2018 00:00:00 +0000</pubDate>
      <guid>https://jhandguy.github.io/posts/observer-design-pattern-ios/</guid>
      <description>Design Patterns are part of Mobile Development for a while now and a revolution towards Quality Assurance is on. Such patterns have become a standard among the community, yet implementing an academic one might come with a price — complexity.
Because some Design Patterns solve very complex problems, they often result in a complicated implementation as well. So complex sometimes, that we tend to use heavy Third Party Frameworks, even for simple use cases.</description>
    </item>
  </channel>
</rss>
